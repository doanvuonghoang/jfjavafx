# =============================================================================
# Tutorial INI configuration
#
# Usernames/passwords are based on the classic Mel Brooks' film "Spaceballs" :)
# =============================================================================

# -----------------------------------------------------------------------------
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------
;[users]
;root = secret, admin
;guest = guest, guest
;presidentskroob = 12345, president
;darkhelmet = ludicrousspeed, darklord, schwartz
;lonestarr = vespa, goodguy, schwartz

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
;[roles]
;admin = *
;schwartz = lightsaber:*
;goodguy = winnebago:drive:eagle5

;[main]
dataSource = com.jf.javafx.DataSourceWrapper
dataSource.dsString = jdbc/sample

credentialsMatcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
# base64 encoding, not hex in this example:
credentialsMatcher.storedCredentialsHexEncoded = false
credentialsMatcher.hashAlgorithmName = SHA-256
credentialsMatcher.hashIterations = 1024

#jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm = com.jf.javafx.JFRealm

jdbcRealm.authenticationQuery  = select "password", "password_salt" from users where "username" = ?
jdbcRealm.permissionsQuery  = select "permission" from roles_permissions where "role_name" = ?
jdbcRealm.userRolesQuery  = select "role_name" from user_roles where "username" = ?

jdbcRealm.dataSource = $dataSource
jdbcRealm.credentialsMatcher = $credentialsMatcher
jdbcRealm.permissionsLookupEnabled = true